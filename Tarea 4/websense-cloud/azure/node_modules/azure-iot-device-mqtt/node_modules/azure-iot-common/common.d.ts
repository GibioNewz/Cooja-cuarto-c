// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

import { EventEmitter } from 'events';
import { Message } from 'azure-iot-device-mqtt/node_modules/azure-iot-common/lib/message';

export import endpoint = require('azure-iot-device-mqtt/node_modules/azure-iot-common/lib/endpoint');
export import errors = require('azure-iot-device-mqtt/node_modules/azure-iot-common/lib/errors');
export import results = require('azure-iot-device-mqtt/node_modules/azure-iot-common/lib/results');
export { anHourFromNow, encodeUriComponentStrict } from 'azure-iot-device-mqtt/node_modules/azure-iot-common/lib/authorization';
export { ConnectionString } from 'azure-iot-device-mqtt/node_modules/azure-iot-common/lib/connection_string';
export { Message }
export { SharedAccessSignature } from 'azure-iot-device-mqtt/node_modules/azure-iot-common/lib/shared_access_signature';
export { RetryOperation } from 'azure-iot-device-mqtt/node_modules/azure-iot-common/lib/retry_operation';
export { RetryPolicy, NoRetry, ExponentialBackOffWithJitter } from 'azure-iot-device-mqtt/node_modules/azure-iot-common/lib/retry_policy';
export { AuthenticationProvider, AuthenticationType } from 'azure-iot-device-mqtt/node_modules/azure-iot-common/lib/authentication_provider';

export interface Receiver extends EventEmitter {
    on(type: 'message', func: (msg: Message) => void): this;
    on(type: 'errorReceived', func: (err: Error) => void): this;

    on(type: string, func: Function): this;
}

export { TransportConfig, X509 } from 'azure-iot-device-mqtt/node_modules/azure-iot-common/lib/authorization';
